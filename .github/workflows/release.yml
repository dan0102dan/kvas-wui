name: Build Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch:
          - mipsle
          - mips
          - arm64
        include:
          - goarch: mipsle
            goos: linux
            output: api-mipsel
          - goarch: mips
            goos: linux
            output: api-mips
          - goarch: arm64
            goos: linux
            output: api-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Сборка фронтенда
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          
      - name: Install frontend dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      # Создание архива для фронтенда
      - name: Create frontend archive
        run: |
          tar -czvf build.tar.gz -C build .
          mv build.tar.gz release-artifacts

      # Сборка бэкенда
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Build Go binaries
        working-directory: server
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
        run: |
          echo "Building for GOOS=$GOOS GOARCH=$GOARCH"
          go mod tidy
          go build -o ../release-artifacts/${{ matrix.output }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-package
          path: release-artifacts/*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-artifacts/*
