# Minimal makefile for Sphinx documentation
#

# You can set these variables from the command line, and also
# from the environment for the first two.
SPHINXOPTS    ?=
SPHINXBUILD   ?= sphinx-build
SOURCEDIR     = source
BUILDDIR      = build
TARGET_NAME   ?= kvaspro
OUTPUT_DIR    ?= output

# Put it first so that "make" without argument is like "make help".
help:
	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

.PHONY: help Makefile

# Catch-all target: route all unknown targets to Sphinx using the new
# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
%: Makefile
	@rm -rf "$(OUTPUT_DIR)"
	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

# Custom targets for copying files with specific extensions and cleaning up
html:
	@rm -rf "$(BUILDDIR)/html"
	@$(SPHINXBUILD) -M html "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
	@mkdir -p "$(OUTPUT_DIR)/html"
	@rm -rf "$(OUTPUT_DIR)/html"
	@mv "$(BUILDDIR)/html" "$(OUTPUT_DIR)/"

latexpdf:	
	@rm -rf "$(BUILDDIR)/latex"
	@$(SPHINXBUILD) -M latexpdf "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
	@mkdir -p "$(OUTPUT_DIR)/pdf"
	@find "$(BUILDDIR)/latex" -type f -name '*.pdf' -exec cp {} "$(OUTPUT_DIR)/pdf" \;
	@mv "$(OUTPUT_DIR)/pdf/pro.pdf" "$(OUTPUT_DIR)/pdf/$(TARGET_NAME).pdf"


epub:
	@rm -rf "$(BUILDDIR)/epub"
	@$(SPHINXBUILD) -M epub "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
	@mkdir -p "$(OUTPUT_DIR)/epub"
	@find "$(BUILDDIR)/epub" -type f -name '*.epub' -exec cp {} "$(OUTPUT_DIR)/epub" \;
	@mv "$(OUTPUT_DIR)/epub/Pro.epub" "$(OUTPUT_DIR)/epub/$(TARGET_NAME).epub"


# Clean all build artifacts
clean:
	@rm -rf "$(BUILDDIR)"